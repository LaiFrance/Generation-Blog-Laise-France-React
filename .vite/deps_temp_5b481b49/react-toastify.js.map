{
  "version": 3,
  "sources": ["../../node_modules/react-toastify/src/utils/propValidator.ts", "../../node_modules/react-toastify/src/utils/constant.ts", "../../node_modules/react-toastify/src/utils/collapseToast.ts", "../../node_modules/react-toastify/src/utils/cssTransition.tsx", "../../node_modules/react-toastify/src/core/eventManager.ts", "../../node_modules/react-toastify/src/hooks/useKeeper.ts", "../../node_modules/react-toastify/src/hooks/toastContainerReducer.ts", "../../node_modules/react-toastify/src/hooks/useToastContainer.ts", "../../node_modules/react-toastify/src/hooks/useToast.ts", "../../node_modules/react-toastify/src/components/CloseButton.tsx", "../../node_modules/react-toastify/src/components/ProgressBar.tsx", "../../node_modules/react-toastify/src/components/Icons.tsx", "../../node_modules/react-toastify/src/components/Toast.tsx", "../../node_modules/react-toastify/src/components/Transitions.tsx", "../../node_modules/react-toastify/src/components/ToastContainer.tsx", "../../node_modules/react-toastify/src/core/toast.tsx"],
  "sourcesContent": ["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n", "import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n", "import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n", "import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n", "import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n", "import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n", "import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n", "import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon ?? props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n", "import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n", "import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n", "import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n", "import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n", "import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n", "import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n", "import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n", "import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\ninterface ToastPromiseParams {\n  pending: string | UpdateOptions;\n  success: string | UpdateOptions;\n  error: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  const id = isStr(pending)\n    ? toast.loading(pending, options)\n    : toast.loading(pending.render, {\n        ...options,\n        ...(pending as ToastOptions)\n      });\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions,\n    result: T\n  ) => {\n    const params = isStr(input) ? { render: input } : input;\n    toast.update(id, {\n      type,\n      ...resetParams,\n      ...options,\n      ...params,\n      data: result\n    });\n    return result;\n  };\n  const p = isFn(promise) ? promise() : promise;\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"],
  "mappings": "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",
  "names": ["isNum", "v", "isNaN", "isBool", "isStr", "isFn", "parseClassName", "isToastIdValid", "toastId", "getAutoCloseDelay", "toastAutoClose", "containerAutoClose", "canUseDom", "window", "document", "createElement", "canBeRendered", "content", "isValidElement", "POSITION", "TOP_LEFT", "TOP_RIGHT", "TOP_CENTER", "BOTTOM_LEFT", "BOTTOM_RIGHT", "BOTTOM_CENTER", "TYPE", "INFO", "SUCCESS", "WARNING", "ERROR", "DEFAULT", "collapseToast", "node", "done", "duration", "scrollHeight", "style", "requestAnimationFrame", "minHeight", "height", "transition", "padding", "margin", "setTimeout", "cssTransition", "enter", "exit", "appendPosition", "collapse", "collapseDuration", "ToastTransition", "children", "position", "preventExitTransition", "nodeRef", "isIn", "enterClassName", "exitClassName", "baseClassName", "useRef", "animationStep", "useLayoutEffect", "onEnter", "useEffect", "onExited", "onExit", "current", "className", "addEventListener", "onEntered", "e", "target", "removeEventListener", "React", "React__default", "eventManager", "list", "Map", "emitQueue", "on", "event", "callback", "has", "set", "get", "push", "off", "cb", "filter", "cancelEmit", "timers", "forEach", "clearTimeout", "emit", "args", "timer", "useKeeper", "arg", "refresh", "ref", "reducer", "state", "action", "type", "id", "staleId", "useToastContainer", "props", "useReducer", "x", "forceUpdate", "toast", "dispatch", "containerRef", "toastCount", "queue", "collection", "instance", "toastKey", "displayedToast", "containerId", "isToastActive", "getToast", "buildToast", "removeToast", "clearWaitingQueue", "length", "indexOf", "limit", "dequeueToast", "shift", "toastContent", "toastProps", "appendToast", "isNotValid", "updateId", "enableMultiContainer", "delay", "options", "data", "closeToast", "isNotAnUpdate", "isLoading", "theme", "icon", "key", "closeButton", "rtl", "toastClassName", "bodyClassName", "toastStyle", "bodyStyle", "onClick", "pauseOnHover", "pauseOnFocusLoss", "draggable", "draggablePercent", "draggableDirection", "closeOnClick", "progressClassName", "progressStyle", "autoClose", "hideProgressBar", "progress", "role", "deleteToast", "removeFromCollection", "onOpen", "onClose", "cloneElement", "queueLen", "freeSlot", "toDequeue", "i", "getToastToRender", "toastToRender", "toastList", "newestOnTop", "Object", "keys", "reverse", "map", "p", "getX", "targetTouches", "clientX", "getY", "clientY", "useToast", "useState", "isRunning", "setIsRunning", "setPreventExitTransition", "toastRef", "drag", "start", "y", "delta", "removalDistance", "canCloseOnClick", "canDrag", "boundingRect", "syncProps", "bindDragEvents", "unbindDragEvents", "bindFocusEvents", "unbindFocusEvents", "onDragStart", "getBoundingClientRect", "nativeEvent", "offsetWidth", "offsetHeight", "onDragTransitionEnd", "top", "bottom", "left", "right", "pauseToast", "playToast", "hasFocus", "onDragMove", "onDragEnd", "preventDefault", "transform", "opacity", "Math", "abs", "eventHandlers", "onMouseDown", "onTouchStart", "onMouseUp", "onTouchEnd", "onMouseEnter", "onMouseLeave", "CloseButton", "ariaLabel", "stopPropagation", "viewBox", "fillRule", "d", "ProgressBar", "hide", "userStyle", "controlledProgress", "animationDuration", "animationPlayState", "defaultClassName", "cx", "classNames", "animationEvent", "defaultProps", "Svg", "rest", "width", "fill", "Warning", "Info", "Success", "Error", "Spinner", "Icons", "info", "warning", "success", "error", "spinner", "Toast", "Transition", "cssClasses", "isProgressControlled", "maybeIcon", "iconProps", "Icon", "renderCloseButton", "Bounce", "Slide", "Zoom", "Flip", "ToastContainer", "getClassName", "containerStyle", "pointerEvents", "containers", "latestInstance", "containerDomNode", "containerConfig", "lazy", "isAnyContainerMounted", "size", "container", "generateToastId", "random", "toString", "substr", "getToastId", "dispatchToast", "body", "appendChild", "render", "mergeOptions", "createToastByType", "loading", "handlePromise", "promise", "pending", "resetParams", "resolver", "input", "result", "params", "update", "then", "err", "warn", "dark", "dismiss", "isActive", "oldOptions", "oldContent", "nextOptions", "onChange", "configure", "config", "containerInstance", "item", "removeChild"]
}
